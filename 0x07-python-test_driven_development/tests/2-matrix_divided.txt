# Test cases for matrix_divided function

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]
>>> matrix
[[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]

>>> matrix = [[1, 2], [3, 4], [5, 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]
>>> matrix
[[1, 2], [3, 4], [5, 6]]

>>> matrix = [[]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[]]
>>> matrix
[[]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, "5", 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = "not a matrix"
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = "two"
>>> matrix_divided(matrix, div)
Traceback ( most recent call last):
    ...
TypeError: div must be a number
